openapi: 3.0.0
info:
  title: WB Base API
  version: 1.0.0
  description: API для практики фронтенда с mock-данными и пользовательскими действиями

servers:
  - url: https://wb-base.onrender.com
  - url: http://localhost:10000
    description: Локальный сервер

tags:
  - name: Auth
    description: Авторизация и управление пользователями
  - name: Products
    description: Каталог товаров
  - name: Categories
    description: Категории и подкатегории товаров
  - name: Cart
    description: Корзина пользователя
  - name: Favorites
    description: Избранные товары
  - name: Reviews
    description: Отзывы пользователей

security:
  - bearerAuth: []

paths:
  # ------------------ AUTH ------------------
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/auth/login:
    post:
      tags: [Auth]
      summary: Вход пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Токен авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /api/auth/forgot:
    post:
      tags: [Auth]
      summary: Запрос на сброс пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordInput'
      responses:
        '200':
          description: Токен сброса пароля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetToken'

  /api/auth/reset:
    post:
      tags: [Auth]
      summary: Сброс пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordInput'
      responses:
        '200':
          description: Пароль обновлён
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  # ------------------ PRODUCTS ------------------
  /api/catalog/products:
    get:
      tags: [Products]
      summary: Получить список товаров
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags: [Products]
      summary: Добавить новый товар
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Товар создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/catalog/products/{id}:
    get:
      tags: [Products]
      summary: Получить товар по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
    put:
      tags: [Products]
      summary: Обновить товар по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Товар обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
    delete:
      tags: [Products]
      summary: Удалить товар по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean

  # ------------------ CATEGORIES ------------------
  /api/catalog/categories:
    get:
      tags: [Categories]
      summary: Получить все категории с подкатегориями
      responses:
        '200':
          description: Список категорий с подкатегориями
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryWithSub'

  # ------------------ CART ------------------
  /api/cart:
    get:
      tags: [Cart]
      summary: Получить корзину текущего пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Корзина пользователя
          content:
            application/json:
              $ref: '#/components/schemas/Cart'
    delete:
      tags: [Cart]
      summary: Очистить корзину
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Корзина очищена
          content:
            application/json:
              schema:
                type: object
                properties:
                  cleared:
                    type: boolean

  /api/cart/items:
    post:
      tags: [Cart]
      summary: Добавить или обновить товар в корзине
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemInput'
      responses:
        '201':
          description: Товар добавлен/обновлён
          content:
            application/json:
              $ref: '#/components/schemas/CartItem'

  /api/cart/items/{id}:
    delete:
      tags: [Cart]
      summary: Удалить товар из корзины
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean

  # ------------------ FAVORITES ------------------
  /api/favorites:
    get:
      tags: [Favorites]
      summary: Получить избранные товары пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список избранного
          content:
            application/json:
              type: array
              items:
                $ref: '#/components/schemas/Product'
    post:
      tags: [Favorites]
      summary: Добавить товар в избранное
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
      responses:
        '201':
          description: Товар добавлен
          content:
            application/json:
              type: object
              properties:
                added:
                  type: boolean

  /api/favorites/{product_id}:
    delete:
      tags: [Favorites]
      summary: Удалить товар из избранного
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Товар удалён
          content:
            application/json:
              type: object
              properties:
                removed:
                  type: boolean

  # ------------------ REVIEWS ------------------
  /api/reviews/{product_id}:
    get:
      tags: [Reviews]
      summary: Получить отзывы по товару
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Список отзывов
          content:
            application/json:
              type: array
              items:
                $ref: '#/components/schemas/Review'
    post:
      tags: [Reviews]
      summary: Добавить отзыв по товару
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
      responses:
        '201':
          description: Отзыв добавлен
          content:
            application/json:
              $ref: '#/components/schemas/Review'

  /api/reviews/id/{id}:
    put:
      tags: [Reviews]
      summary: Обновить отзыв
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
      responses:
        '200':
          description: Отзыв обновлён
          content:
            application/json:
              $ref: '#/components/schemas/Review'
    delete:
      tags: [Reviews]
      summary: Удалить отзыв
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Отзыв удалён
          content:
            application/json:
              type: object
              properties:
                deleted:
                  type: boolean

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    PasswordResetToken:
      type: object
      properties:
        reset_token:
          type: string
        expires_at:
          type: string
          format: date-time

    ForgotPasswordInput:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    ResetPasswordInput:
      type: object
      properties:
        token:
          type: string
        new_password:
          type: string
      required:
        - token
        - new_password

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        discount_price:
          type: number
        stock_quantity:
          type: integer
        sizes:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        stars:
          type: number

    ProductInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        discount_price:
          type: number
        stock_quantity:
          type: integer
        sizes:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        parent_id:
          type: integer
          nullable: true

    CategoryWithSub:
      allOf:
        - $ref: '#/components/schemas/Category'
        - type: object
          properties:
            subcategories:
              type: array
              items:
                $ref: '#/components/schemas/Category'

    CartItemInput:
      type: object
      properties:
        product_id:
          type: integer
        size:
          type: string
        quantity:
          type: integer
      required:
        - product_id
        - quantity

    CartItem:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        name:
          type: string
        price:
          type: number
        discount_price:
          type: number
        size:
          type: string
        quantity:
          type: integer

    Cart:
      type: object
      properties:
        cart_id:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'

    ReviewInput:
      type: object
      properties:
        rating:
          type: integer
        comment:
          type: string
      required:
        - rating

    Review:
      type: object
      properties:
        id:
          type: integer
        rating:
          type: integer
        comment:
          type: string
        created_at:
          type: string
          format: date-time
        author:
          type: string
